test-svn-to-git-home.txt
Created Wed Feb  3 08:10:45 AKST 2016
Copyright (C) 2016 by Raymond E. Marcil <marcilr@gmail.com>


Test svn-git-conversion of subversion repo to git repo.


Wed Feb  3 08:10:45 AKST 2016
=============================
o May have an answer to error:

1. Added manifest file to gci/manifest to git repo.

2. On htpc configured receive.denyCurrentBranch in gci repo:
htpc:/data/git/gci$ git config receive.denyCurrentBranch ignore   <===

3. covellite:~/git$ rm -rf gci

4. resync

5. covellite:~/git$ cd gci/
covellite:~/git/gci$ ls
docs     glossary.txt  manifest   salary.txt   svn_ext_val.txt
gci.txt  links.txt     mysql.txt  servers.txt  TODO
covellite:~/git/gci$

Manifest to saved back to orginal gci repo on htpc.  Appears to have worked.



o Decided that trying to create a new empty remote and populating it is a
mistake.  Why not just copy the svn to git converted repo:

$ rsync -va --stats --progress ./gci htpc:/data/git/
sending incremental file list
gci/
gci/TODO
          8,284 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=527/529)
gci/gci.txt
          1,091 100%    1.04MB/s    0:00:00 (xfr#2, to-chk=526/529)
gci/glossary.txt
          6,325 100%    6.03MB/s    0:00:00 (xfr#3, to-chk=525/529)
...
gci/.git/svn/refs/remotes/git-svn/unhandled.log
         69,107 100%  702.99kB/s    0:00:00 (xfr#331, to-chk=0/529)

Number of files: 529 (reg: 331, dir: 198)
Number of created files: 529 (reg: 331, dir: 198)
Number of deleted files: 0
Number of regular files transferred: 331
Total file size: 287,661 bytes
Total transferred file size: 287,661 bytes
Literal data: 287,661 bytes
Matched data: 0 bytes
File list size: 0
File list generation time: 0.001 seconds
File list transfer time: 0.000 seconds
Total bytes sent: 324,188
Total bytes received: 7,161

sent 324,188 bytes  received 7,161 bytes  44,179.87 bytes/sec
total size is 287,661  speedup is 0.87
$

Set privs on on gci/ to track with other htpc /data/* directories:
$ ssh htpc 'chmod 2775 /data/git/gci'
$ ssh htpc 'chown -R marcilr:sshfs /data/git/gci'


o Test cloning gci repo to repo initialized with "git init --bare":

$ mkdir tmp
$ cd tmp
$ git clone ssh://marcilr@htpc/data/git/gci
Cloning into 'gci'...
remote: Counting objects: 298, done.
remote: Compressing objects: 100% (119/119), done.
remote: Total 298 (delta 178), reused 298 (delta 178)
Receiving objects: 100% (298/298), 38.71 KiB | 0 bytes/s, done.
Resolving deltas: 100% (178/178), done.
Checking connectivity... done.
$

$ ls gci/
gci.txt       links.txt  salary.txt   svn_ext_val.txt
glossary.txt  mysql.txt  servers.txt  TODO
$

Looks good. 

o Recreate gci repo by running git init with the --bare option, which
initializes the repository without a working directory:
--git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server

1. Delete old and create fresh gci repo:
htpc:/data/git$ rm -rf gci/
htpc:/data/git$ mkdir gci
htpc:/data/git$ cd gci/

2. Create gci repo by running git init with the --bare option, which 
initializes the repository without a working directory:

htpc:/data/git/gci$ git init --bare
Initialized empty Git repository in /data/git/gci/
htpc:/data/git/gci$ 

htpc:/data/git/gci$ ls
branches  config  description  HEAD  hooks  info  objects  refs
htpc:/data/git/gci$ 

3. Push gci repo to remote:
covellite:~/git/syntax/svn-to-git/src/gci$ git push -u origin master
Counting objects: 298, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (297/297), done.
Writing objects: 100% (298/298), 38.71 KiB | 0 bytes/s, done.
Total 298 (delta 178), reused 0 (delta 0)
To ssh://marcilr@home/data/git/gci
 * [new branch]      master -> master
Branch master set up to track remote branch master from origin.
covellite:~/git/syntax/svn-to-git/src/gci$


o Recreate gci repo and try again:

1. Delete old and create fresh gci repo:
htpc:/data/git$ rm -rf gci/
htpc:/data/git$ mkdir gci
htpc:/data/git$ cd gci/

htpc:/data/git/gci$ git init
Initialized empty Git repository in /data/git/gci/.git/
marcilr@htpc:/data/git/gci$ 
htpc:/data/git/gci$

htpc:/data/git/gci$ ls -al
total 12
drwxr-sr-x 3 marcilr sshfs 4096 Feb  3 08:38 .
drwxrwsr-x 3 sshfs   sshfs 4096 Feb  3 08:37 ..
drwxr-sr-x 7 marcilr sshfs 4096 Feb  3 08:38 .git
htpc:/data/git/gci$

2. Try "git push -u origin master" command again:
Counting objects: 298, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (297/297), done.
Writing objects: 100% (298/298), 38.71 KiB | 0 bytes/s, done.
Total 298 (delta 178), reused 0 (delta 0)
remote: error: refusing to update checked out branch: refs/heads/master
remote: error: By default, updating the current branch in a non-bare repository
remote: error: is denied, because it will make the index and work tree inconsistent
remote: error: with what you pushed, and will require 'git reset --hard' to match
remote: error: the work tree to HEAD.
remote: error: 
remote: error: You can set 'receive.denyCurrentBranch' configuration variable to
remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into
remote: error: its current branch; however, this is not recommended unless you
remote: error: arranged to update its work tree to match what you pushed in some
remote: error: other way.
remote: error: 
remote: error: To squelch this message and still keep the default behaviour, set
remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.
To ssh://marcilr@home/data/git/gci
 ! [remote rejected] master -> master (branch is currently checked out)
error: failed to push some refs to 'ssh://marcilr@home/data/git/gci'
marcilr@covellite:~/git/syntax/svn-to-git/src/gci$

Still get same error message as previous.


o The "git push -u origin master" command also fails.

covellite:~/git/syntax/svn-to-git/src/gci$ git push -u origin master
Counting objects: 298, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (297/297), done.
Writing objects: 100% (298/298), 38.49 KiB | 0 bytes/s, done.
Total 298 (delta 178), reused 0 (delta 0)
remote: error: refusing to update checked out branch: refs/heads/master
remote: error: By default, updating the current branch in a non-bare repository
remote: error: is denied, because it will make the index and work tree inconsistent
remote: error: with what you pushed, and will require 'git reset --hard' to matc
remote: error: the work tree to HEAD.
remote: error: 
remote: error: You can set 'receive.denyCurrentBranch' configuration variable to
remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into
remote: error: its current branch; however, this is not recommended unless you
remote: error: arranged to update its work tree to match what you pushed in some
remote: error: other way.
remote: error: 
remote: error: To squelch this message and still keep the default behaviour, set
remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.
To ssh://marcilr@home/data/git/gci
 ! [remote rejected] master -> master (branch is currently checked out)
error: failed to push some refs to 'ssh://marcilr@home/data/git/gci'
covellite:~/git/syntax/svn-to-git/src/gci$


Tue Feb  2 14:21:20 AKST 2016
=============================
Executing of svn-to-git fails when configured for home with:
  AUTHORS=authors.txt
  SVNPATH=svn+ssh://home/data/svnroot/gci/gci
  GITPATH=ssh://marcilr@home/data/git/gci

covellite:~/git/syntax/svn-to-git/src$ ./test-svn-to-git-home
debug() Executing: ./svn-to-git svn+ssh://home/data/svnroot/gci/gci ssh://marcilr@home/data/git/gci
debug() main: ARGCOUNT=2
debug() process-cli-args() START
debug() process-cli-args() number args=2
debug() process-cli-args() processing: svn+ssh://home/data/svnroot/gci/gci
debug() process-cli-args() SVNPATH=svn+ssh://home/data/svnroot/gci/gci
debug() process-cli-args() processing: ssh://marcilr@home/data/git/gci
debug() process-cli-args() GITPATH=ssh://marcilr@home/data/git/gci
debug() process-cli-args() END
debug() main: SVNPATH = svn+ssh://home/data/svnroot/gci/gci
debug() main: GITPATH = ssh://marcilr@home/data/git/gci
debug() main: SVNREPO = gci-svn
debug() main: GITREPO = gci
debug() main: SVNREPO: gci-svn
debug() main: Executing: cd gci-svn; svn-to-git-authors > ../authors.txt; cd ..
main: Local gci exists, *not* recreating.
debug() main: Executing git-repo-create ssh://marcilr@home/data/git/gci
debug() git-repo-create START
debug() main: ARGCOUNT=1
debug() get-credentials() START
debug() main: CREDENTIALS: /home/marcilr/.github
debug() get-credentials() USER = marcilr
debug() get-credentials() PASS = ***
debug() get-credentials() EMAIL = marcilr@gmail.com
debug() get-credentials() TOKEN = ***
debug() get-credentials() END
debug() process-cli-args() START
debug() process-cli-args() number args=1
debug() process-cli-args() processing: ssh://marcilr@home/data/git/gci
debug() process-cli-args() REPOPATH=ssh://marcilr@home/data/git/gci
debug() process-cli-args() GITREPO = 
debug() process-cli-args() GITREMOTE = 
debug() process-cli-args() END
debug() main: REPOPATH = ssh://marcilr@home/data/git/gci
debug() main: REPOPATH = ssh://marcilr@home/data/git/gci
debug() main: Creating remote repo via ssh
debug() main: Processing home path
debug() process-home() START
debug() process-home() SERVER = home
debug() process-home() PATH = /data/git/gci
debug() process-home() Executing: /usr/bin/ssh home 'if [ -d /data/git/gci ]; then echo exists; fi'
debug() process-home() RESULT =
Creating /data/git/gci directory on home...
debug() process-home() Executing: /usr/bin/ssh home '/bin/mkdir -p /data/git/gci'
debug() process-home() Executing: /usr/bin/ssh home '/usr/bin/git init /data/git/gci'
Initialized empty Git repository in /data/git/gci/.git/
debug() process-home() Executing: /usr/bin/ssh home '/bin/chmod -R 2775 /data/git/gci'
debug() process-home() Executing: /usr/bin/ssh home 'if [ -d /data/git/gci/.git ]; then echo exists; fi'
process-home() Created ssh://marcilr@home/data/git/gci remote
debug() process-home() END
debug() git-repo-create END
debug() main: Executing cd gci; /usr/bin/git remote add origin ssh://marcilr@home/data/git/gci; cd ..
fatal: remote origin already exists.
Counting objects: 298, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (297/297), done.
Writing objects: 100% (298/298), 38.10 KiB | 0 bytes/s, done.
Total 298 (delta 178), reused 0 (delta 0)
remote: error: refusing to update checked out branch: refs/heads/master
remote: error: By default, updating the current branch in a non-bare repository
remote: error: is denied, because it will make the index and work tree inconsistent
remote: error: with what you pushed, and will require 'git reset --hard' to match
remote: error: the work tree to HEAD.
remote: error: 
remote: error: You can set 'receive.denyCurrentBranch' configuration variable to
remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into
remote: error: its current branch; however, this is not recommended unless you
remote: error: arranged to update its work tree to match what you pushed in some
remote: error: other way.
remote: error: 
remote: error: To squelch this message and still keep the default behaviour, set
remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.
To ssh://marcilr@home/data/git/gci
 ! [remote rejected] master -> master (branch is currently checked out)
error: failed to push some refs to 'ssh://marcilr@home/data/git/gci'
No refs in common and none specified; doing nothing.
Perhaps you should specify a branch such as 'master'.
fatal: The remote end hung up unexpectedly
error: failed to push some refs to 'ssh://marcilr@home/data/git/gci'
covellite:~/git/syntax/svn-to-git/src$ ./test-svn-to-git-home


Links
=====
Git on the Server - Setting Up the Server
Now, you can set up an empty repository for them by running
git init with the --bare option, which initializes the repository
without a working directory:
$ cd /opt/git
$ mkdir project.git
$ cd project.git
$ git init --bare
Initialized empty Git repository in /opt/git/project.git/
https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server

Links
=====
cannot push into git repository
http://stackoverflow.com/questions/3221859/cannot-push-into-git-repository
